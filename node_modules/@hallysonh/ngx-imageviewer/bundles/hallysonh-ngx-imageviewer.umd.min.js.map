{"version":3,"sources":["ng://@hallysonh/ngx-imageviewer/lib/imageviewer.config.ts","ng://@hallysonh/ngx-imageviewer/lib/imageviewer.model.ts","ng://@hallysonh/ngx-imageviewer/lib/image.loader.ts","ng://@hallysonh/ngx-imageviewer/lib/imagecache.service.ts","ng://@hallysonh/ngx-imageviewer/lib/pdf.loader.ts","ng://@hallysonh/ngx-imageviewer/lib/imageviewer.component.ts","ng://@hallysonh/ngx-imageviewer/lib/imageviewer.module.ts"],"names":["ImageViewerConfig","createButtonConfig","icon","tooltip","sortId","show","IMAGEVIEWER_CONFIG","InjectionToken","IMAGEVIEWER_CONFIG_DEFAULT","width","height","bgStyle","scaleStep","rotateStepper","loadingMessage","buttonStyle","iconFontFamily","alpha","hoverAlpha","iconStyle","borderStyle","borderWidth","tooltips","enabled","bgAlpha","textStyle","textAlpha","padding","radius","nextPageButton","String","fromCharCode","beforePageButton","zoomOutButton","zoomInButton","rotateLeftButton","rotateRightButton","resetButton","Button","config","style","this","display","prototype","onClick","evt","alert","onMouseDown","draw","ctx","x","y","drawPosition","drawRadius","save","isHover","hover","globalAlpha","fillStyle","lineWidth","beginPath","arc","Math","PI","closePath","fill","strokeStyle","stroke","drawIconFont","restore","centreX","centreY","size","font","measureText","fillText","isWithinBounds","dx","abs","dy","ResourceLoader","scale","rotation","Subject","resetViewport","canvasDim","loaded","inverted","toSquareAngle","viewport","canvas","_image","minScale","maxScale","onFinish","clearRect","fillRect","loading","translate","rotate","drawImage","textAlign","onResourceChange","resourceChange","asObservable","angle","trunc","ImageResourceLoader","_super","tslib_1.__extends","setUp","loadResource","_this","Image","addEventListener","next","src","ImageCacheService","Object","defineProperty","_cache","getCache","url","page","cache","find","i","getImage","c","image","saveImage","push","disposeCache","forEach","URL","revokeObjectURL","Injectable","args","providedIn","PdfResourceLoader","_imageCache","call","window","pdfjsLib","GlobalWorkerOptions","workerSrc","pdfjsWorker","showItemsQuantity","vm","loadingTask","getDocument","currentItem","then","pdf","_pdf","totalItem","numPages","reason","console","error","getPage","pdfPage","_page","loadImage","_pendingReload","cacheimg","document","createElement","context","getContext","pageVp","getViewport","renderContext","canvasContext","render","toBlob","blob","img","onload","createObjectURL","ImageViewerComponent","_sanitizer","_renderer","extendsDefaultConfig","_nextPageButton","_beforePageButton","_zoomOutButton","_zoomInButton","_rotateLeftButton","_rotateRightButton","_resetButton","_buttons","filter","item","sort","a","b","_src","value","setUpResource","_filetype","_width","_canvas","resetImage","_height","ngAfterViewInit","canvasRef","nativeElement","_context","nextPage","previousPage","zoomOut","zoomIn","rotateLeft","rotateRight","addEventListeners","updateCanvas","ngOnDestroy","_listenDestroyList","listenDestroy","isImage","_resource","isPdf","_resourceChangeSub","unsubscribe","_pdfResource","_imageResource","File","subscribe","onTap","activeElement","getUIElement","screenToCanvasCentre","center","onTouchEnd","_touchStartState","undefined","processTouchEvent","assign","deltaX","deltaY","newScale","startRotate","newAngle","_dirty","listen","onMouseWheel","checkTooltipActivation","clientX","clientY","event","preventDefault","detail","wheelDelta","pos","getUIElements","oldToolTip","_currentTooltip","ctx_1","drawButtons","drawPaginator","requestAnimationFrame","gap","length","fontSize","rectWidth","rectHeight","rectX","rectY","textX","textY","drawRoundRectangle","x1","x2","x3","label","moveTo","lineTo","quadraticCurveTo","cfg","defaultCfg","localCfg","rect","getBoundingClientRect","left","top","hoverElements","slice","activeUIElement","uiElement","file","toLowerCase","testFile","Component","selector","template","styles","DomSanitizer","Renderer2","decorators","type","Inject","Input","ViewChild","regexTest","name","match","Éµ0","NgModule","providers","provide","useValue","declarations","exports"],"mappings":"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","sourcesContent":["import { Injectable, InjectionToken } from '@angular/core';\r\n\r\nexport class ImageViewerConfig {\r\n  width?: number;\r\n  height?: number;\r\n  bgStyle?: string;\r\n  scaleStep?: number;\r\n  rotateStepper?: boolean;\r\n  buttonStyle?: ButtonStyle;\r\n  loadingMessage?: string;\r\n  tooltips?: {\r\n    enabled?: boolean,\r\n    bgStyle?: string,\r\n    bgAlpha?: number,\r\n    textStyle?: string,\r\n    textAlpha?: number,\r\n    padding?: number,\r\n    radius?: number\r\n  };\r\n  nextPageButton?: ButtonConfig;\r\n  beforePageButton?: ButtonConfig;\r\n  zoomOutButton?: ButtonConfig;\r\n  zoomInButton?: ButtonConfig;\r\n  rotateLeftButton?: ButtonConfig;\r\n  rotateRightButton?: ButtonConfig;\r\n  resetButton?: ButtonConfig;\r\n}\r\n\r\nexport interface ButtonStyle {\r\n  iconFontFamily?: string;\r\n  alpha?: number;\r\n  hoverAlpha?: number;\r\n  bgStyle?: string;\r\n  iconStyle?: string;\r\n  borderStyle?: string;\r\n  borderWidth?: number;\r\n}\r\n\r\nexport interface ButtonConfig {\r\n  icon?: string;\r\n  tooltip?: string;\r\n  sortId?: number;\r\n  show?: boolean;\r\n}\r\n\r\nexport function createButtonConfig(icon?: string, tooltip?: string, sortId: number = 0, show: boolean = true) {\r\n  return { icon: icon, tooltip: tooltip, sortId: sortId, show: show };\r\n}\r\n\r\nexport const IMAGEVIEWER_CONFIG = new InjectionToken<ImageViewerConfig>('imageviewer.config');\r\n\r\nexport let IMAGEVIEWER_CONFIG_DEFAULT: ImageViewerConfig = {\r\n  width: 800, // component default width\r\n  height: 600, // component default height\r\n  bgStyle: '#ECEFF1', // component background style\r\n  scaleStep: 0.1, // zoom scale step (using the zoom in/out buttons)\r\n  rotateStepper: false,\r\n  loadingMessage: 'Loading...',\r\n  buttonStyle: {\r\n    iconFontFamily: 'Material Icons', // font used to render the button icons\r\n    alpha: 0.5, // buttons' transparence value\r\n    hoverAlpha: 0.7, // buttons' transparence value when mouse is over\r\n    bgStyle: '#000000', //  buttons' background style\r\n    iconStyle: '#ffffff', // buttons' icon colors\r\n    borderStyle: '#000000', // buttons' border style\r\n    borderWidth: 0 // buttons' border width (0 == disabled)\r\n  },\r\n  tooltips: {\r\n    enabled: true, // enable or disable tooltips for buttons\r\n    bgStyle: '#000000', // tooltip background style\r\n    bgAlpha: 0.5, // tooltip background transparence\r\n    textStyle: '#ffffff', // tooltip's text style\r\n    textAlpha: 0.9, // tooltip's text transparence\r\n    padding: 15, // tooltip padding\r\n    radius: 20 // tooltip border radius\r\n  },\r\n  nextPageButton: createButtonConfig(String.fromCharCode(0xE409), 'Next page', 0),\r\n  beforePageButton: createButtonConfig(String.fromCharCode(0xE408), 'Previous page', 1),\r\n  zoomOutButton: createButtonConfig(String.fromCharCode(0xE900), 'Zoom out', 0),\r\n  zoomInButton: createButtonConfig(String.fromCharCode(0xE8FF), 'Zoom in', 1),\r\n  rotateLeftButton: createButtonConfig(String.fromCharCode(0xE419), 'Rotate left', 2),\r\n  rotateRightButton: createButtonConfig(String.fromCharCode(0xE41A), 'Rotate right', 3),\r\n  resetButton: createButtonConfig(String.fromCharCode(0xE863), 'Reset', 4)\r\n};\r\n","import { ButtonConfig, ButtonStyle, ImageViewerConfig } from './imageviewer.config';\r\nimport { Observable, Subject } from 'rxjs';\r\n\r\nexport class Button {\r\n  //#region Properties\r\n  sortId = 0;\r\n\r\n  icon: string;\r\n  tooltip: string;\r\n\r\n  // hover state\r\n  hover: boolean | (() => boolean) = false;\r\n\r\n  // show/hide button\r\n  display = true;\r\n\r\n  // drawn on position\r\n  private drawPosition = null;\r\n  private drawRadius = 0;\r\n  //#endregion\r\n\r\n  //#region Lifecycle events\r\n  constructor(\r\n    config: ButtonConfig,\r\n    private style: ButtonStyle\r\n  ) {\r\n    this.sortId = config.sortId;\r\n    this.display = config.show;\r\n    this.icon = config.icon;\r\n    this.tooltip = config.tooltip;\r\n  }\r\n  //#endregion\r\n\r\n  //#region Events\r\n  // click action\r\n  onClick(evt) { alert('no click action set!'); return true; }\r\n\r\n  // mouse down action\r\n  onMouseDown(evt) { return false; }\r\n  //#endregion\r\n\r\n  //#region Draw Button\r\n  draw(ctx, x, y, radius) {\r\n    this.drawPosition = { x: x, y: y };\r\n    this.drawRadius = radius;\r\n\r\n    // preserve context\r\n    ctx.save();\r\n\r\n    // drawing settings\r\n    const isHover = (typeof this.hover === 'function') ? this.hover() : this.hover;\r\n    ctx.globalAlpha = (isHover) ? this.style.hoverAlpha : this.style.alpha;\r\n    ctx.fillStyle = this.style.bgStyle;\r\n    ctx.lineWidth = 0;\r\n\r\n    // draw circle\r\n    ctx.beginPath();\r\n    ctx.arc(x, y, radius, 0, 2 * Math.PI);\r\n    ctx.closePath();\r\n    ctx.fill();\r\n    if (this.style.borderWidth > 0) {\r\n      ctx.lineWidth = this.style.borderWidth;\r\n      ctx.strokeStyle = this.style.borderStyle;\r\n      ctx.stroke();\r\n    }\r\n\r\n    // draw icon\r\n    if (this.icon !== null) {\r\n      ctx.save();\r\n      // ctx.globalCompositeOperation = 'destination-out';\r\n      this.drawIconFont(ctx, x, y, radius);\r\n      ctx.restore();\r\n    }\r\n\r\n    // restore context\r\n    ctx.restore();\r\n  }\r\n\r\n  private drawIconFont(ctx, centreX, centreY, size) {\r\n    // font settings\r\n    ctx.font = size + 'px ' + this.style.iconFontFamily;\r\n    ctx.fillStyle = this.style.iconStyle;\r\n\r\n    // calculate position\r\n    const textSize = ctx.measureText(this.icon);\r\n    const x = centreX - textSize.width / 2;\r\n    const y = centreY + size / 2;\r\n\r\n    // draw it\r\n    ctx.fillText(this.icon, x, y);\r\n  }\r\n  //#endregion\r\n\r\n  //#region Utils\r\n  isWithinBounds(x, y) {\r\n    if (this.drawPosition === null) { return false; }\r\n    const dx = Math.abs(this.drawPosition.x - x), dy = Math.abs(this.drawPosition.y - y);\r\n    return dx * dx + dy * dy <= this.drawRadius * this.drawRadius;\r\n  }\r\n  //#endregion\r\n}\r\n\r\nexport class Viewport {\r\n  constructor(\r\n    public width: number,\r\n    public height: number,\r\n    public scale: number,\r\n    public rotation: number,\r\n    public x: number,\r\n    public y: number\r\n  ) {}\r\n}\r\n\r\nexport interface Dimension { width: number; height: number; }\r\n\r\nexport abstract class ResourceLoader {\r\n  public src: string;\r\n  public sourceDim: { width: number, height: number };\r\n  public viewport: Viewport = { width: 0, height: 0, scale: 1, rotation: 0, x: 0, y: 0 };\r\n  public minScale = 0;\r\n  public maxScale = 4;\r\n  public currentItem = 1;\r\n  public totalItem = 1;\r\n  public showItemsQuantity = false;\r\n  public loaded = false;\r\n  public loading = false;\r\n  public rendering = false;\r\n\r\n  protected _image;\r\n  protected resourceChange = new Subject<string>();\r\n\r\n  abstract setUp();\r\n  abstract loadResource();\r\n\r\n  public resetViewport(canvasDim: Dimension): boolean {\r\n    if (!this.loaded || !canvasDim) { return; }\r\n\r\n    const rotation = this.viewport ? this.viewport.rotation : 0;\r\n    const inverted = toSquareAngle(rotation) / 90 % 2 !== 0;\r\n    const canvas = {\r\n      width: !inverted ? canvasDim.width : canvasDim.height,\r\n      height: !inverted ? canvasDim.height : canvasDim.width\r\n    };\r\n\r\n    if (((canvas.height / this._image.height) * this._image.width) <= canvas.width) {\r\n      this.viewport.scale = canvas.height / this._image.height;\r\n    } else {\r\n      this.viewport.scale = canvas.width / this._image.width;\r\n    }\r\n    this.minScale = this.viewport.scale / 4;\r\n    this.maxScale = this.viewport.scale * 4;\r\n\r\n    // start point to draw image\r\n    this.viewport.width = this._image.width * this.viewport.scale;\r\n    this.viewport.height = this._image.height * this.viewport.scale;\r\n    this.viewport.x = (canvasDim.width - this.viewport.width) / 2;\r\n    this.viewport.y = (canvasDim.height - this.viewport.height) / 2;\r\n  }\r\n\r\n  public draw(ctx, config: ImageViewerConfig, canvasDim: Dimension, onFinish) {\r\n    // clear canvas\r\n    ctx.clearRect(0, 0, canvasDim.width, canvasDim.height);\r\n\r\n    // Draw background color;\r\n    ctx.fillStyle = config.bgStyle;\r\n    ctx.fillRect(0, 0, canvasDim.width, canvasDim.height);\r\n\r\n    // draw image (transformed, rotate and scaled)\r\n    if (!this.loading && this.loaded) {\r\n      ctx.translate(this.viewport.x + this.viewport.width / 2, this.viewport.y + this.viewport.height / 2);\r\n      ctx.rotate(this.viewport.rotation * Math.PI / 180);\r\n      ctx.scale(this.viewport.scale, this.viewport.scale);\r\n      ctx.drawImage(this._image, -this._image.width / 2, -this._image.height / 2);\r\n    } else {\r\n      ctx.fillStyle = '#333';\r\n      ctx.font = '25px Verdana';\r\n      ctx.textAlign = 'center';\r\n      ctx.fillText(config.loadingMessage || 'Loading...', canvasDim.width / 2, canvasDim.height / 2);\r\n    }\r\n\r\n    onFinish(ctx, config, canvasDim);\r\n  }\r\n\r\n  public onResourceChange() { return this.resourceChange.asObservable(); }\r\n}\r\n\r\nexport function toSquareAngle(angle: number) {\r\n  return 90 * ((Math.trunc(angle / 90) + (Math.trunc(angle % 90) > 45 ? 1 : 0)) % 4);\r\n}\r\n","import { ResourceLoader, Dimension, toSquareAngle } from './imageviewer.model';\r\nimport { ImageViewerConfig } from './imageviewer.config';\r\n\r\nexport class ImageResourceLoader extends ResourceLoader {\r\n\r\n  setUp() {\r\n    this.loadResource();\r\n  }\r\n\r\n  loadResource() {\r\n    this.loading = true;\r\n    this._image = new Image();\r\n    this._image.addEventListener('load', (evt) => {\r\n      this.loaded = true;\r\n      this.loading = false;\r\n      this.resourceChange.next();\r\n    }, false);\r\n    this._image.src = this.src;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nexport interface CacheDef {\r\n  url: string;\r\n  page: number;\r\n  image: any;\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ImageCacheService {\r\n\r\n  private _cache: CacheDef[] = [];\r\n\r\n  constructor() {}\r\n\r\n  get cache(): CacheDef[] {\r\n    return this._cache;\r\n  }\r\n\r\n  getCache(url: string, page: number) {\r\n    return this.cache.find(i => i.url === url && i.page === page);\r\n  }\r\n\r\n  getImage(url: string, page: number) {\r\n    const c = this.getCache(url, page);\r\n    return c ? c.image : null;\r\n  }\r\n\r\n  saveImage(url: string, page: number, image: any) {\r\n    const cache = this.getCache(url, page);\r\n    if (cache) {\r\n      cache.image = image;\r\n    } else {\r\n      this.cache.push({ url, page, image });\r\n    }\r\n  }\r\n\r\n  disposeCache() {\r\n    this.cache.forEach(i => URL.revokeObjectURL(i.image.src));\r\n    this._cache = [];\r\n  }\r\n}\r\n","import { ResourceLoader, Dimension, toSquareAngle } from './imageviewer.model';\r\nimport { ImageCacheService } from './imagecache.service';\r\nimport { ImageViewerConfig } from './imageviewer.config';\r\nimport { PDFJSStatic, PDFDocumentProxy, PDFPageProxy } from 'pdfjs-dist';\r\n\r\ndeclare var pdfjsLib: any;\r\ndeclare var pdfjsWorker: any;\r\n\r\nexport class PdfResourceLoader extends ResourceLoader {\r\n  private _pdf: PDFDocumentProxy;\r\n  private _page: PDFPageProxy;\r\n  private _pendingReload: boolean;\r\n\r\n  constructor(private _imageCache: ImageCacheService) {\r\n    super();\r\n    if (typeof window !== 'undefined' && 'Worker' in window) {\r\n      if (pdfjsLib && pdfjsLib.GlobalWorkerOptions && !pdfjsLib.GlobalWorkerOptions.workerSrc) {\r\n        pdfjsLib.GlobalWorkerOptions.workerSrc = pdfjsWorker;\r\n      }\r\n    }\r\n    this.showItemsQuantity = true;\r\n  }\r\n\r\n  setUp() {\r\n    const vm = this;\r\n    if (vm.loading || !vm.src) { return; }\r\n    const loadingTask = pdfjsLib.getDocument(vm.src);\r\n    vm.loading = true;\r\n    vm.currentItem = 1;\r\n    loadingTask.then((pdf: PDFDocumentProxy) => {\r\n      vm._pdf = pdf;\r\n      vm.totalItem = pdf.numPages;\r\n      vm.loaded = true;\r\n      vm.loadResource();\r\n    }, (reason: string) => {\r\n      console.error(reason);\r\n    });\r\n  }\r\n\r\n  loadResource() {\r\n    const vm = this;\r\n    if (!vm.loaded) {\r\n      vm._pendingReload = true;\r\n      return;\r\n    }\r\n    vm.loaded = false;\r\n    const url = vm.src;\r\n    const page = vm.currentItem;\r\n\r\n    vm._pdf.getPage(page).then((pdfPage) => {\r\n      vm._page = pdfPage;\r\n      vm.loadImage(url, page, () => {\r\n        vm.loaded = true;\r\n        vm.loading = false;\r\n        if (vm._pendingReload) {\r\n          vm._pendingReload = false;\r\n          vm.loadResource();\r\n        } else {\r\n          vm.resourceChange.next();\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  private loadImage(src: string, page: number, onFinish: () => void) {\r\n    const vm = this;\r\n    const cacheimg = vm._imageCache.getImage(src, page);\r\n    if (cacheimg) {\r\n      vm._image = cacheimg;\r\n      onFinish();\r\n      return;\r\n    }\r\n\r\n    const canvas: HTMLCanvasElement = document.createElement('canvas');\r\n    const context = canvas.getContext('2d');\r\n    const pageVp = vm._page.getViewport(2);\r\n\r\n    canvas.width = pageVp.width;\r\n    canvas.height = pageVp.height;\r\n\r\n    const renderContext = {\r\n      canvasContext: context,\r\n      viewport: pageVp\r\n    };\r\n    const renderTask = vm._page.render(renderContext);\r\n    renderTask.then(function () {\r\n      canvas.toBlob(blob => {\r\n        const img = new Image();\r\n        img.onload = onFinish;\r\n        img.src = URL.createObjectURL(blob);\r\n        vm._imageCache.saveImage(src, page, img);\r\n        vm._image = img;\r\n      });\r\n    });\r\n  }\r\n}\r\n","import { Component, Input, ViewChild, AfterViewInit, Renderer2, Inject, OnDestroy } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { ImageViewerConfig, IMAGEVIEWER_CONFIG, IMAGEVIEWER_CONFIG_DEFAULT, ButtonConfig, ButtonStyle } from './imageviewer.config';\r\nimport { Viewport, Button, toSquareAngle, ResourceLoader } from './imageviewer.model';\r\nimport { ImageResourceLoader } from './image.loader';\r\nimport { ImageCacheService } from './imagecache.service';\r\nimport { PdfResourceLoader } from './pdf.loader';\r\n\r\nconst MIN_TOOLTIP_WIDTH_SPACE = 500;\r\n\r\n@Component({\r\n  selector: 'ngx-imageviewer',\r\n  template: `\r\n    <canvas #imageContainer [width]=\"width\" [height]=\"height\"\r\n      (tap)=\"onTap($event)\" (pinchin)=\"processTouchEvent($event)\" (pinchout)=\"processTouchEvent($event)\"\r\n      (panmove)=\"processTouchEvent($event)\" (panend)=\"onTouchEnd()\" (rotatemove)=\"processTouchEvent($event)\"\r\n        (rotateend)=\"onTouchEnd()\">\r\n    </canvas>\r\n  `,\r\n  styles: [`\r\n    :host { display: block }\r\n    :host canvas { margin: 0 auto; display: block }\r\n    [hidden] { display: none !important }\r\n  `]\r\n})\r\nexport class ImageViewerComponent implements AfterViewInit, OnDestroy {\r\n\r\n  //#region Input properties\r\n  private _src: string | File;\r\n  get src() { return this._src; }\r\n  @Input('src') set src(value) {\r\n    if (value === this._src) { return; }\r\n    this._src = value;\r\n    this.setUpResource();\r\n  }\r\n\r\n  // FIX not workign properly\r\n  private _filetype: string;\r\n  get filetype() { return this._filetype; }\r\n  @Input('filetype') set filetype(value: string) {\r\n    if (value === this._filetype) { return; }\r\n    this._filetype = value;\r\n    this.setUpResource();\r\n  }\r\n\r\n  private _width: number;\r\n  get width() { return this._width; }\r\n  @Input('width') set width(value) {\r\n    if (value === this._width) { return; }\r\n    this._width = value;\r\n    if (this._canvas) { this._canvas.width = this._width; }\r\n    this.resetImage();\r\n  }\r\n\r\n  private _height: number;\r\n  get height() { return this._height; }\r\n  @Input('height') set height(value) {\r\n    if (value === this._height) { return; }\r\n    this._height = value;\r\n    if (this._canvas) { this._canvas.height = this._height; }\r\n    this.resetImage();\r\n  }\r\n\r\n  @ViewChild('imageContainer') canvasRef: any;\r\n  //#endregion\r\n\r\n  //#region Private properties\r\n  // Canvas 2D context\r\n  private _canvas: HTMLCanvasElement;\r\n  private _context: CanvasRenderingContext2D;\r\n\r\n  // dirty state\r\n  private _dirty = true;\r\n\r\n  // action buttons\r\n  private _nextPageButton: Button;\r\n  private _beforePageButton: Button;\r\n  private _zoomOutButton: Button;\r\n  private _zoomInButton: Button;\r\n  private _rotateLeftButton: Button;\r\n  private _rotateRightButton: Button;\r\n  private _resetButton: Button;\r\n\r\n  // contains all active buttons\r\n  private _buttons = [];\r\n\r\n  // current tool tip (used to track change of tool tip)\r\n  private _currentTooltip = null;\r\n\r\n  // cached data when touch events started\r\n  private _touchStartState: any = {};\r\n\r\n  // list of event listener destroyers\r\n  private _listenDestroyList = [];\r\n\r\n  // image / Pdf Drawable Resource\r\n  private _resource: ResourceLoader;\r\n  private _resourceChangeSub: Subscription;\r\n\r\n  // Caching resourceLoader instances to reuse\r\n  private _imageResource: ImageResourceLoader;\r\n  private _pdfResource: PdfResourceLoader;\r\n\r\n  //#endregion\r\n\r\n  //#region Lifecycle events\r\n  constructor(\r\n    private _sanitizer: DomSanitizer,\r\n    private _renderer: Renderer2,\r\n    private _imageCache: ImageCacheService,\r\n    @Inject(IMAGEVIEWER_CONFIG) private config: ImageViewerConfig\r\n  ) {\r\n    this.config = this.extendsDefaultConfig(config);\r\n    this._nextPageButton = new Button(this.config.nextPageButton, this.config.buttonStyle);\r\n    this._beforePageButton = new Button(this.config.beforePageButton, this.config.buttonStyle);\r\n    this._zoomOutButton = new Button(this.config.zoomOutButton, this.config.buttonStyle);\r\n    this._zoomInButton = new Button(this.config.zoomInButton, this.config.buttonStyle);\r\n    this._rotateLeftButton = new Button(this.config.rotateLeftButton, this.config.buttonStyle);\r\n    this._rotateRightButton = new Button(this.config.rotateRightButton, this.config.buttonStyle);\r\n    this._resetButton = new Button(this.config.resetButton, this.config.buttonStyle);\r\n    this._buttons = [\r\n      this._zoomOutButton,\r\n      this._zoomInButton,\r\n      this._rotateLeftButton,\r\n      this._rotateRightButton,\r\n      this._resetButton\r\n    ].filter(item => item.display)\r\n      .sort((a, b) => a.sortId - b.sortId);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this._canvas = this.canvasRef.nativeElement;\r\n    this._context = this._canvas.getContext('2d');\r\n\r\n    // setting canvas dimention\r\n    this._canvas.width = this.width || this.config.width;\r\n    this._canvas.height = this.height || this.config.height;\r\n\r\n    // setting buttons actions\r\n    this._nextPageButton.onClick = (evt) => { this.nextPage(); return false; };\r\n    this._beforePageButton.onClick = (evt) => { this.previousPage(); return false; };\r\n    this._zoomOutButton.onClick = (evt) => { this.zoomOut(); return false; };\r\n    this._zoomInButton.onClick = (evt) => { this.zoomIn(); return false; };\r\n    this._rotateLeftButton.onClick = (evt) => { this.rotateLeft(); return false; };\r\n    this._rotateRightButton.onClick = (evt) => { this.rotateRight(); return false; };\r\n    this._resetButton.onClick = (evt) => { this.resetImage(); return false; };\r\n\r\n    // register event listeners\r\n    this.addEventListeners();\r\n\r\n    this.updateCanvas();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // unregiste event listeners\r\n    this._listenDestroyList.forEach(listenDestroy => {\r\n      if (typeof listenDestroy === 'function') {\r\n        listenDestroy();\r\n      }\r\n    });\r\n    this._imageCache.disposeCache();\r\n  }\r\n\r\n  setUpResource() {\r\n    if (this.isImage(this.src) && (!this._resource || !(this._resource instanceof ImageResourceLoader))) {\r\n      if (this._resourceChangeSub) {\r\n        this._resourceChangeSub.unsubscribe();\r\n      }\r\n      if (!this._imageResource) {\r\n        this._imageResource = new ImageResourceLoader();\r\n      }\r\n      this._resource = this._imageResource;\r\n    } else if (this.isPdf(this.src) && (!this._resource || !(this._resource instanceof PdfResourceLoader))) {\r\n      if (this._resourceChangeSub) {\r\n        this._resourceChangeSub.unsubscribe();\r\n      }\r\n      if (!this._pdfResource) {\r\n        this._pdfResource = new PdfResourceLoader(this._imageCache);\r\n      }\r\n      this._resource = this._pdfResource;\r\n    }\r\n    if (this._resource) {\r\n      this._resource.src = this.src instanceof File ? URL.createObjectURL(this.src) : this.src;\r\n      this._resourceChangeSub = this._resource.onResourceChange().subscribe(() => {\r\n        this.updateCanvas();\r\n        if (this.src instanceof File) {\r\n          URL.revokeObjectURL(this._resource.src);\r\n        }\r\n      });\r\n      this._resource.setUp();\r\n      this.resetImage();\r\n      if (this._context) { this.updateCanvas(); }\r\n    }\r\n  }\r\n  //#endregion\r\n\r\n  //#region Touch events\r\n  onTap(evt) {\r\n    const activeElement = this.getUIElement(this.screenToCanvasCentre(evt.center));\r\n    if (activeElement !== null) { activeElement.onClick(evt); }\r\n  }\r\n\r\n  onTouchEnd() {\r\n    this._touchStartState.viewport = undefined;\r\n    this._touchStartState.scale = undefined;\r\n    this._touchStartState.rotate = undefined;\r\n  }\r\n\r\n  processTouchEvent(evt) {\r\n    // process pan\r\n    if (!this._touchStartState.viewport) { this._touchStartState.viewport = Object.assign({}, this._resource.viewport); }\r\n\r\n    const viewport = this._resource.viewport;\r\n    viewport.x = this._touchStartState.viewport.x + evt.deltaX;\r\n    viewport.y = this._touchStartState.viewport.y + evt.deltaY;\r\n\r\n    // process pinch in/out\r\n    if (!this._touchStartState.scale) { this._touchStartState.scale = this._resource.viewport.scale; }\r\n    const newScale = this._touchStartState.scale * evt.scale;\r\n    viewport.scale = newScale > this._resource.maxScale ? this._resource.maxScale :\r\n      newScale < this._resource.minScale ? this._resource.minScale : newScale;\r\n\r\n    // process rotate left/right\r\n    if (!this._touchStartState.rotate) { this._touchStartState.rotate = { rotation: viewport.rotation, startRotate: evt.rotation }; }\r\n    if (evt.rotation !== 0) {\r\n      const newAngle = this._touchStartState.rotate.rotation + evt.rotation - this._touchStartState.rotate.startRotate;\r\n      viewport.rotation = this.config.rotateStepper ? toSquareAngle(newAngle) : newAngle;\r\n    }\r\n    this._dirty = true;\r\n  }\r\n  //#endregion\r\n\r\n  //#region Mouse Events\r\n  private addEventListeners() {\r\n    // zooming\r\n    this._listenDestroyList.push(this._renderer.listen(this._canvas, 'DOMMouseScroll', (evt) => this.onMouseWheel(evt)));\r\n    this._listenDestroyList.push(this._renderer.listen(this._canvas, 'mousewheel', (evt) => this.onMouseWheel(evt)));\r\n\r\n    // show tooltip when mouseover it\r\n    this._listenDestroyList.push(this._renderer.listen(this._canvas, 'mousemove', (evt) =>\r\n      this.checkTooltipActivation(this.screenToCanvasCentre({ x: evt.clientX, y: evt.clientY }))\r\n    ));\r\n  }\r\n\r\n  private onMouseWheel(evt) {\r\n    if (!evt) { evt = event; }\r\n    evt.preventDefault();\r\n    if (evt.detail < 0 || evt.wheelDelta > 0) { // up -> larger\r\n      this.zoomIn();\r\n    } else { // down -> smaller\r\n      this.zoomOut();\r\n    }\r\n  }\r\n\r\n  private checkTooltipActivation(pos: { x: number, y: number }) {\r\n    this.getUIElements().forEach(x => x.hover = false);\r\n    const activeElement = this.getUIElement(pos);\r\n    const oldToolTip = this._currentTooltip;\r\n    if (activeElement !== null) {\r\n      if (typeof activeElement.hover !== 'undefined') {\r\n        activeElement.hover = true;\r\n      }\r\n      if (typeof activeElement.tooltip !== 'undefined') {\r\n        this._currentTooltip = activeElement.tooltip;\r\n      }\r\n    }\r\n    if (oldToolTip !== this._currentTooltip) { this._dirty = true; }\r\n  }\r\n  //#endregion\r\n\r\n  //#region Button Actions\r\n\r\n  private nextPage() {\r\n    if (!this._resource) { return; }\r\n    if (this._resource.currentItem >= this._resource.totalItem) { return; }\r\n    if (this._resource.currentItem < 1) { this._resource.currentItem = 0; }\r\n    this._resource.currentItem++;\r\n    this._resource.loadResource();\r\n    this._dirty = true;\r\n  }\r\n\r\n  private previousPage() {\r\n    if (!this._resource) { return; }\r\n    if (this._resource.currentItem <= 1) { return; }\r\n    if (this._resource.currentItem > this._resource.totalItem) { this._resource.currentItem = this._resource.totalItem + 1; }\r\n    this._resource.currentItem--;\r\n    this._resource.loadResource();\r\n    this._dirty = true;\r\n  }\r\n\r\n  private zoomIn() {\r\n    if (!this._resource) { return; }\r\n    const newScale = this._resource.viewport.scale * (1 + this.config.scaleStep);\r\n    this._resource.viewport.scale = newScale > this._resource.maxScale ? this._resource.maxScale : newScale;\r\n    this._dirty = true;\r\n  }\r\n\r\n  private zoomOut() {\r\n    if (!this._resource) { return; }\r\n    const newScale = this._resource.viewport.scale * (1 - this.config.scaleStep);\r\n    this._resource.viewport.scale = newScale < this._resource.minScale ? this._resource.minScale : newScale;\r\n    this._dirty = true;\r\n  }\r\n\r\n  private rotateLeft() {\r\n    if (!this._resource) { return; }\r\n    const viewport = this._resource.viewport;\r\n    viewport.rotation = viewport.rotation === 0 ? 270 : viewport.rotation - 90;\r\n    this._dirty = true;\r\n  }\r\n\r\n  private rotateRight() {\r\n    if (!this._resource) { return; }\r\n    const viewport = this._resource.viewport;\r\n    viewport.rotation = viewport.rotation === 270 ? 0 : viewport.rotation + 90;\r\n    this._dirty = true;\r\n  }\r\n\r\n  private resetImage() {\r\n    if (!this._resource) { return; }\r\n    this._resource.resetViewport(this._canvas);\r\n    this._dirty = true;\r\n  }\r\n  //#endregion\r\n\r\n  //#region Draw Canvas\r\n  private updateCanvas() {\r\n    this.resetImage();\r\n\r\n    // start new render loop\r\n    this.render();\r\n  }\r\n\r\n  private render() {\r\n    const vm = this;\r\n    // only re-render if dirty\r\n    if (this._dirty && this._resource) {\r\n      this._dirty = false;\r\n\r\n      const ctx = this._context;\r\n      ctx.save();\r\n\r\n      this._resource.draw(ctx, this.config, this._canvas, () => {\r\n        ctx.restore();\r\n\r\n        if (vm._resource.loaded) {\r\n          // draw buttons\r\n          this.drawButtons(ctx);\r\n\r\n          // draw paginator\r\n          if (this._resource.showItemsQuantity) {\r\n            this.drawPaginator(ctx);\r\n          }\r\n        }\r\n      });\r\n    }\r\n    requestAnimationFrame(() => this.render());\r\n  }\r\n\r\n  private drawButtons(ctx) {\r\n    const padding = this.config.tooltips.padding;\r\n    const radius = this.config.tooltips.radius;\r\n    const gap = 2 * radius + padding;\r\n    const x = this._canvas.width - radius - padding;\r\n    const y = this._canvas.height - radius - padding;\r\n\r\n    // draw buttons\r\n    for (let i = 0; i < this._buttons.length; i++) {\r\n      this._buttons[i].draw(ctx, x, y - gap * i, radius);\r\n    }\r\n\r\n    // draw tooltip\r\n    if (this._currentTooltip !== null && this._canvas.width > MIN_TOOLTIP_WIDTH_SPACE) {\r\n      ctx.save();\r\n      const fontSize = radius;\r\n      ctx.font = fontSize + 'px sans-serif';\r\n\r\n      // calculate position\r\n      const textSize = ctx.measureText(this._currentTooltip).width\r\n        , rectWidth = textSize + padding\r\n        , rectHeight = fontSize * 0.70 + padding\r\n        , rectX = this._canvas.width\r\n          - (2 * radius + 2 * padding) // buttons\r\n          - rectWidth\r\n        , rectY = this._canvas.height - rectHeight - padding\r\n        , textX = rectX + 0.5 * padding\r\n        , textY = this._canvas.height - 1.5 * padding;\r\n\r\n      ctx.globalAlpha = this.config.tooltips.bgAlpha;\r\n      ctx.fillStyle = this.config.tooltips.bgStyle;\r\n      this.drawRoundRectangle(ctx, rectX, rectY, rectWidth, rectHeight, 8, true, false);\r\n\r\n      ctx.globalAlpha = this.config.tooltips.textAlpha;\r\n      ctx.fillStyle = this.config.tooltips.textStyle;\r\n      ctx.fillText(this._currentTooltip, textX, textY);\r\n\r\n      ctx.restore();\r\n    }\r\n  }\r\n\r\n  private drawPaginator(ctx) {\r\n    const padding = this.config.tooltips.padding;\r\n    const radius = this.config.tooltips.radius;\r\n    const labelWidth = 50;\r\n    const x1 = (this._canvas.width - labelWidth) / 2 - radius - padding; // PrevPageButton\r\n    const x2 = this._canvas.width / 2; // Label\r\n    const x3 = (this._canvas.width + labelWidth) / 2 + radius + padding; // NextPageButton\r\n    const y = this._canvas.height - radius - padding;\r\n    const label = this._resource.currentItem + '/' + this._resource.totalItem;\r\n    const fontSize = 25;\r\n\r\n    ctx.save();\r\n    this._beforePageButton.draw(ctx, x1, y, radius);\r\n    this._nextPageButton.draw(ctx, x3, y, radius);\r\n    ctx.restore();\r\n\r\n    ctx.save();\r\n    ctx.font = fontSize + 'px Verdana';\r\n    ctx.textAlign = 'center';\r\n    ctx.fillText(label, x2, this._canvas.height - padding - fontSize / 2, labelWidth);\r\n    ctx.restore();\r\n  }\r\n\r\n  private drawRoundRectangle(ctx, x, y, width, height, radius, fill, stroke) {\r\n    radius = (typeof radius === 'number') ? radius : 5;\r\n    fill = (typeof fill === 'boolean') ? fill : true; // fill = default\r\n    stroke = (typeof stroke === 'boolean') ? stroke : false;\r\n\r\n    // draw round rectangle\r\n    ctx.beginPath();\r\n    ctx.moveTo(x + radius, y);\r\n    ctx.lineTo(x + width - radius, y);\r\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\r\n    ctx.lineTo(x + width, y + height - radius);\r\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\r\n    ctx.lineTo(x + radius, y + height);\r\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\r\n    ctx.lineTo(x, y + radius);\r\n    ctx.quadraticCurveTo(x, y, x + radius, y);\r\n    ctx.closePath();\r\n\r\n    if (fill) { ctx.fill(); }\r\n    if (stroke) { ctx.stroke(); }\r\n  }\r\n\r\n  //#endregion\r\n\r\n  //#region Utils\r\n\r\n  private extendsDefaultConfig(cfg: ImageViewerConfig) {\r\n    const defaultCfg = IMAGEVIEWER_CONFIG_DEFAULT;\r\n    const localCfg = Object.assign({}, defaultCfg, cfg);\r\n    if (cfg.buttonStyle) { localCfg.buttonStyle = Object.assign(defaultCfg.buttonStyle, cfg.buttonStyle); }\r\n    if (cfg.tooltips) { localCfg.tooltips = Object.assign(defaultCfg.tooltips, cfg.tooltips); }\r\n    if (cfg.nextPageButton) { localCfg.nextPageButton = Object.assign(defaultCfg.nextPageButton, cfg.nextPageButton); }\r\n    if (cfg.beforePageButton) { localCfg.beforePageButton = Object.assign(defaultCfg.beforePageButton, cfg.beforePageButton); }\r\n    if (cfg.zoomOutButton) { localCfg.zoomOutButton = Object.assign(defaultCfg.zoomOutButton, cfg.zoomOutButton); }\r\n    if (cfg.zoomOutButton) { localCfg.zoomOutButton = Object.assign(defaultCfg.zoomOutButton, cfg.zoomOutButton); }\r\n    if (cfg.zoomInButton) { localCfg.zoomInButton = Object.assign(defaultCfg.zoomInButton, cfg.zoomInButton); }\r\n    if (cfg.rotateLeftButton) { localCfg.rotateLeftButton = Object.assign(defaultCfg.rotateLeftButton, cfg.rotateLeftButton); }\r\n    if (cfg.rotateRightButton) { localCfg.rotateRightButton = Object.assign(defaultCfg.rotateRightButton, cfg.rotateRightButton); }\r\n    if (cfg.resetButton) { localCfg.resetButton = Object.assign(defaultCfg.resetButton, cfg.resetButton); }\r\n    return localCfg;\r\n  }\r\n\r\n  private screenToCanvasCentre(pos: { x: number, y: number }) {\r\n    const rect = this._canvas.getBoundingClientRect();\r\n    return { x: pos.x - rect.left, y: pos.y - rect.top };\r\n  }\r\n\r\n  private getUIElements(): Button[] {\r\n    const hoverElements = this._buttons.slice();\r\n    hoverElements.push(this._nextPageButton);\r\n    hoverElements.push(this._beforePageButton);\r\n    return hoverElements;\r\n  }\r\n\r\n  private getUIElement(pos: { x: number, y: number }) {\r\n    const activeUIElement = this.getUIElements().filter((uiElement) => {\r\n      return uiElement.isWithinBounds(pos.x, pos.y);\r\n    });\r\n    return (activeUIElement.length > 0) ? activeUIElement[0] : null;\r\n  }\r\n\r\n  private isImage(file: string | File) {\r\n    if (this._filetype && this._filetype.toLowerCase() === 'image') { return true; }\r\n    return testFile(file, '\\\\.(png|jpg|jpeg|gif)|image/png');\r\n  }\r\n\r\n  private isPdf(file: string | File) {\r\n    if (this._filetype && this._filetype.toLowerCase() === 'pdf') { return true; }\r\n    return testFile(file, '\\\\.(pdf)|application/pdf');\r\n  }\r\n  //#endregion\r\n}\r\n\r\nfunction testFile(file: string | File, regexTest: string) {\r\n  if (!file) { return false; }\r\n  const name = file instanceof File ? file.name : file;\r\n  return name.toLowerCase().match(regexTest) !== null;\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { ImageViewerComponent } from './imageviewer.component';\r\nimport { IMAGEVIEWER_CONFIG, IMAGEVIEWER_CONFIG_DEFAULT } from './imageviewer.config';\r\n\r\n@NgModule({\r\n  providers: [{ provide: IMAGEVIEWER_CONFIG, useValue: IMAGEVIEWER_CONFIG_DEFAULT }],\r\n  declarations: [ImageViewerComponent],\r\n  exports: [ImageViewerComponent],\r\n})\r\nexport class ImageViewerModule { }\r\n"]}